service: product-service

frameworkVersion: "3"

plugins:
  - serverless-esbuild # used for compiling/packaging the Typescript code
  - serverless-offline # used for local execution

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-central-1
  stage: dev
  environment:
    PRODUCTS_TABLE_NAME: Products
    STOCKS_TABLE_NAME: Stocks
  httpApi:
    cors:
      allowedOrigins:
        - http://localhost:5000
        - https://dr1rynhak7llz.cloudfront.net

functions:
  # Serverless Framework specific syntax
  getProductList:
    handler: ./src/handlers/getProductList.handler
    events:
      - httpApi:
          path: /api/products
          method: GET
      - httpApi:
          path: /api/products
          method: OPTIONS

  createProduct:
    handler: ./src/handlers/createProduct.handler
    events:
      - httpApi:
          path: /api/products
          method: POST

  getProductById:
    handler: ./src/handlers/getProductById.handler
    events:
      - httpApi:
          path: /api/product/{productId}
          method: GET
      - httpApi:
          path: /api/product/{productId}
          method: OPTIONS

  populateProducts:
    handler: ./src/handlers/populateProducts.handler

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    StocksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Stocks
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
